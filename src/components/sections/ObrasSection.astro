---
import PageHeader from '../PageHeader.astro';
import Modal from '../Modal.astro';
import ObrasForm from '../forms/ObrasForm.astro';
import DetailModal from '../DetailModal.astro';
import TableObra from '../table/TableObra.astro';
import ObraDetail from '../detail/ObraDetail.astro';
import { fetchObras } from '../../lib/obra_api';

const obras = await fetchObras();

// Calcular estadísticas dinámicas
const obrasActivas = obras.filter(o => o.estado !== 'completada').length;
const obrasCompletadas = obras.filter(o => o.estado === 'completada').length;
const totalObras = obras.length;
---

<PageHeader 
  title="Gestión de Obras" 
  subtitle="Administra y controla todos los proyectos y obras en curso"
  actionButton={{ text: "Nueva Obra", onClick: "openModal('modal-nueva-obra')" }}
/>

<div class="obras-section">
  <div class="stats-grid">
    <div class="stat-card">
      <div class="stat-icon obras">
        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-number">{obrasActivas}</div>
        <div class="stat-label">Obras Activas</div>
      </div>
    </div>
    
    <div class="stat-card">
      <div class="stat-icon progress">
        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-number">{obras.filter(o => o.estado === 'en_progreso').length}</div>
        <div class="stat-label">En Progreso</div>
      </div>
    </div>
    
    <div class="stat-card">
      <div class="stat-icon completed">
        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-number">{obrasCompletadas}</div>
        <div class="stat-label">Obras Completadas</div>
      </div>
    </div>
    
    <div class="stat-card">
      <div class="stat-icon revenue">
        <svg width="24" height="24" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
        </svg>
      </div>
      <div class="stat-content">
        <div class="stat-number">{totalObras}</div>
        <div class="stat-label">Total Obras</div>
      </div>
    </div>
  </div>

  <div class="obras-table">
    <div class="table-header">
      <h3>Obras Registradas</h3>
      <div class="table-filters">
        <select class="filter-select" id="estado-filter">
          <option value="">Todas las obras</option>
          <option value="planificacion">Planificación</option>
          <option value="en_progreso">En progreso</option>
          <option value="pausada">Pausada</option>
          <option value="completada">Completadas</option>
        </select>
        <input 
          type="text" 
          class="filter-input" 
          id="search-input"
          placeholder="Buscar por nombre o responsable..."
        />
      </div>
    </div>
    
    <TableObra obras={obras} />
  </div>
</div>

<!-- Modal para Nueva Obra -->
<Modal id="modal-nueva-obra" title="Nueva Obra" size="lg">
  <ObrasForm />
</Modal>

<!-- Modales de Detalles dinámicos -->
{obras.map((obra) => (
  <DetailModal id={`detail-obra-${obra.id}`} title={obra.nombre} type="obra">
    <ObraDetail obra={{
      id: obra.id,
      nombre: obra.nombre,
      estado: obra.estado,
      fecha_inicio: obra.fecha_inicio,
      fecha_fin: obra.fecha_fin,
      ubicacion: obra.ubicacion,
      responsable: obra.responsable,
      descripcion: obra.descripcion
    }} />
  </DetailModal>
))}

<style>
  .obras-section {
    space-y: 32px;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 24px;
    margin-bottom: 32px;
  }

  .stat-card {
    background: white;
    padding: 24px;
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #e5e7eb;
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .stat-icon {
    width: 48px;
    height: 48px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
  }

  .stat-icon.obras { background: linear-gradient(135deg, #3b82f6, #1d4ed8); }
  .stat-icon.progress { background: linear-gradient(135deg, #f59e0b, #d97706); }
  .stat-icon.completed { background: linear-gradient(135deg, #10b981, #059669); }
  .stat-icon.revenue { background: linear-gradient(135deg, #8b5cf6, #7c3aed); }

  .stat-content {
    flex: 1;
  }

  .stat-number {
    font-size: 24px;
    font-weight: 700;
    color: #111827;
    line-height: 1;
    margin-bottom: 4px;
  }

  .stat-label {
    font-size: 14px;
    color: #6b7280;
    font-weight: 500;
  }

  .obras-table {
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    border: 1px solid #e5e7eb;
  }

  .table-header {
    padding: 24px;
    border-bottom: 1px solid #e5e7eb;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 16px;
  }

  .table-header h3 {
    font-size: 18px;
    font-weight: 600;
    color: #111827;
    margin: 0;
  }

  .table-filters {
    display: flex;
    gap: 12px;
  }

  .filter-select, .filter-input {
    padding: 8px 12px;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 14px;
    background: white;
    color: #374151;
  }

  .filter-input {
    min-width: 200px;
  }

  @media (max-width: 768px) {
    .stats-grid {
      grid-template-columns: 1fr;
    }

    .table-header {
      flex-direction: column;
      align-items: stretch;
      gap: 12px;
    }

    .table-filters {
      flex-direction: column;
    }
  }
</style>

<script type="module">
  // Filtros en tiempo real
  document.addEventListener('DOMContentLoaded', function() {
    const estadoFilter = document.getElementById('estado-filter');
    const searchInput = document.getElementById('search-input');
    const tableRows = document.querySelectorAll('.data-table tbody tr');

    function filterTable() {
      const estadoValue = estadoFilter.value.toLowerCase();
      const searchValue = searchInput.value.toLowerCase();

      tableRows.forEach(row => {
        const estado = row.querySelector('.status-badge').textContent.toLowerCase();
        const nombre = row.cells[0].textContent.toLowerCase();
        const responsable = row.cells[5].textContent.toLowerCase();

        const matchesEstado = !estadoValue || estado.includes(estadoValue.replace('_', ' '));
        const matchesSearch = !searchValue || 
          nombre.includes(searchValue) || 
          responsable.includes(searchValue);

        if (matchesEstado && matchesSearch) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }

    estadoFilter.addEventListener('change', filterTable);
    searchInput.addEventListener('input', filterTable);
  });
</script>